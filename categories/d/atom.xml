<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: D | Go ahead!]]></title>
  <link href="http://repeatedly.github.com/categories/d/atom.xml" rel="self"/>
  <link href="http://repeatedly.github.com/"/>
  <updated>2013-04-17T01:48:57-07:00</updated>
  <id>http://repeatedly.github.com/</id>
  <author>
    <name><![CDATA[Masahiro Nakagawa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[LTSV for D]]></title>
    <link href="http://repeatedly.github.com/2013/02/ltsv-for-d/"/>
    <updated>2013-02-10T04:10:00-08:00</updated>
    <id>http://repeatedly.github.com/2013/02/ltsv-for-d</id>
    <content type="html"><![CDATA[<p>In this week, Shinji Tanaka announced <a href="http://ltsv.org/">Labeled Tab-separated Values (LTSV)</a>.
LTSV is the flexible and robust row oriented format.</p>

<p>I just implemented ltsv-d for D programming language.</p>

<p><a href="http://github.com/repeatedly/ltsv-d">LTSV for D</a></p>

<p>ltsv-d provides <code>fromLTSV</code> and <code>toLTSV</code> functions.</p>

<p><code>fromLTSV</code> for parsing:</p>

<p><code>d
auto apacheLog = "host:127.0.0.1\tident:-\tuser:foo\ttime:[10/Oct/2000:13:55:36 -0700]\treq:GET /apache.gif HTTP/1.0\tstatus:200\tsize:777\treferer:http://www.example.com/start.html\tua:Mozilla/4.08 [en] (Win98; I ;Nav)";
auto record = fromLTSV(apacheLog);
writeln(record["host"]); // "127.0.0.1"
</code></p>

<p><code>toLTSV</code> for dumping:</p>

<p><code>d
auto line = ["foo":"bar", "hoge":"fuga", "piyo":"puyo"].toLTSV();
writeln(line); // "foo:bar\thoge:fuga\tpiyo:puyo"
</code></p>

<p>Enjoy LTSV!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[yajl-d]]></title>
    <link href="http://repeatedly.github.com/2013/01/yajl-d/"/>
    <updated>2013-01-20T05:27:00-08:00</updated>
    <id>http://repeatedly.github.com/2013/01/yajl-d</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/yajl-d">yajl-d</a> is the D binding for <a href="http://lloyd.github.com/yajl/">YAJL</a>.</p>

<p>YAJL provides the stream JSON parsing and some extra features, e.g. allow comments.</p>

<p>yajl-d also provides the JSON encoding and stream decoding.
yajl-d is 2 - 3 times faster than std.json (try simple benchmark in example directory).</p>

<p>Following code is basic form:</p>

<p>```d
import yajl.yajl;</p>

<p>// yajl-d can serialize / deserialize D object.
struct Hoge
{</p>

<pre><code>ulong id;
string word;
bool yes; 
</code></pre>

<p>}</p>

<p>// {"id":100,"word":"hey!","yes":true}
Hoge hoge1 = Hoge(100, "hey!", true);
Hoge hoge2 = decode!Hoge(encode(hoge1));
assert(hoge1 == hoge2);
```</p>

<p><code>encode</code> and <code>decode</code> are the wrapper of <code>Encoder</code> and <code>Decoder</code>. If you want to know more details of <code>Encoder</code> and <code>Decoder</code>. See README and the DDoc.</p>

<p>yajl-d has already listed in the official site.
Thanks to Lloyd!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[siphash-d]]></title>
    <link href="http://repeatedly.github.com/2012/12/siphash-d/"/>
    <updated>2012-12-04T22:57:00-08:00</updated>
    <id>http://repeatedly.github.com/2012/12/siphash-d</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/siphash-d">siphash-d</a> is the D implementation of <a href="https://131002.net/siphash/">SipHash</a>.</p>

<p>The latest CRuby uses SipHash to prevent <a href="http://www.ruby-lang.org/en/news/2012/11/09/ruby19-hashdos-cve-2012-5371/">Hash-flooding DoS attack</a>. From now on, SipHash like algorithm will be important for robust application. So I implemented SipHash for D.</p>

<p>Current version provides only siphash24 function:</p>

<p>```d
import siphash;</p>

<p>ubyte[16] k = cast(ubyte[])"To be|not to be!";
ubyte[] msg = cast(ubyte[])"that is the question.";
auto hashed = siphash24(k, msg);
```</p>

<p>I plan to add std.digest like struct and other APIs if needed.</p>

<p>siphash-d has already listed in the official site.
Thanks to JP Aumasson!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DConf 2013 on kickstarter!]]></title>
    <link href="http://repeatedly.github.com/2012/10/dconf-2013-on-kickstarter/"/>
    <updated>2012-10-29T08:30:00-07:00</updated>
    <id>http://repeatedly.github.com/2012/10/dconf-2013-on-kickstarter</id>
    <content type="html"><![CDATA[<p>Walter launched <a href="http://www.kickstarter.com/projects/2083649206/the-d-programming-language-conference-2013-0">"The D Programming Language Conference 2013" on kickstarter</a> in the last week.
I have already pledged, and total pledged now passed the 50% :)</p>

<p>Please pledge your support!</p>

<p>Forum: <a href="http://forum.dlang.org/thread/k63vi8$1qp0$1@digitalmars.com">DConf 2013 on kickstarter.com: we're live!</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Released denv]]></title>
    <link href="http://repeatedly.github.com/2012/05/released-denv/"/>
    <updated>2012-05-14T06:47:00-07:00</updated>
    <id>http://repeatedly.github.com/2012/05/released-denv</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/repeatedly/denv">denv</a> is a D version of rbenv.</p>

<p>It enables you to manage multiple versions of D environment.<br />
See <a href="https://github.com/repeatedly/denv/blob/master/README.md">README</a> for more details.</p>

<ul>
<li><a href="http://forum.dlang.org/thread/fqcnqqphbfymgymnwqjx@forum.dlang.org">Announce at digitalmars.D.announce</a></li>
<li><a href="https://github.com/repeatedly/denv">denv for contest programming</a> (in Japanese)</li>
</ul>

]]></content>
  </entry>
  
</feed>
